// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace WorkoutTracker.Backend.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20241213074558_FixRelationshipDatas")]
    partial class FixRelationshipDatas
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ExerciseSetWorkoutPlans", b =>
                {
                    b.Property<int>("PlansId")
                        .HasColumnType("int");

                    b.Property<int>("WorkoutPlansPlanId")
                        .HasColumnType("int");

                    b.HasKey("PlansId", "WorkoutPlansPlanId");

                    b.HasIndex("WorkoutPlansPlanId");

                    b.ToTable("ExerciseSetWorkoutPlans");
                });

            modelBuilder.Entity("WorkoutTracker.Backend.Models.ExerciseData", b =>
                {
                    b.Property<int>("ExerciseId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ExerciseId"));

                    b.Property<int>("CategoryWorkout")
                        .HasColumnType("int");

                    b.Property<int>("MuscleGroup")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ExerciseId");

                    b.ToTable("ExerciseDatas");

                    b.HasData(
                        new
                        {
                            ExerciseId = 1,
                            CategoryWorkout = 1,
                            MuscleGroup = 1,
                            Name = "Bench Press"
                        },
                        new
                        {
                            ExerciseId = 2,
                            CategoryWorkout = 1,
                            MuscleGroup = 3,
                            Name = "Squat"
                        },
                        new
                        {
                            ExerciseId = 3,
                            CategoryWorkout = 1,
                            MuscleGroup = 1,
                            Name = "Dumble Press"
                        },
                        new
                        {
                            ExerciseId = 4,
                            CategoryWorkout = 1,
                            MuscleGroup = 3,
                            Name = "RDL (Romanian Deadlift)"
                        });
                });

            modelBuilder.Entity("WorkoutTracker.Backend.Models.ExerciseSet", b =>
                {
                    b.Property<int>("ExerciseSetId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ExerciseSetId"));

                    b.Property<int>("ExerciseId")
                        .HasColumnType("int");

                    b.Property<string>("ExerciseSetName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("Repetitions")
                        .HasColumnType("int");

                    b.Property<int>("Set")
                        .HasColumnType("int");

                    b.Property<string>("Weight")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("ExerciseSetId");

                    b.HasIndex("ExerciseId");

                    b.ToTable("ExerciseSets");
                });

            modelBuilder.Entity("WorkoutTracker.Backend.Models.WorkoutPlans", b =>
                {
                    b.Property<int>("PlanId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PlanId"));

                    b.Property<string>("PlanName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("ScheduledTime")
                        .HasColumnType("datetime2");

                    b.HasKey("PlanId");

                    b.ToTable("WorkoutPlans");
                });

            modelBuilder.Entity("ExerciseSetWorkoutPlans", b =>
                {
                    b.HasOne("WorkoutTracker.Backend.Models.ExerciseSet", null)
                        .WithMany()
                        .HasForeignKey("PlansId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WorkoutTracker.Backend.Models.WorkoutPlans", null)
                        .WithMany()
                        .HasForeignKey("WorkoutPlansPlanId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("WorkoutTracker.Backend.Models.ExerciseSet", b =>
                {
                    b.HasOne("WorkoutTracker.Backend.Models.ExerciseData", "Exercise")
                        .WithMany("ExerciseSets")
                        .HasForeignKey("ExerciseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Exercise");
                });

            modelBuilder.Entity("WorkoutTracker.Backend.Models.ExerciseData", b =>
                {
                    b.Navigation("ExerciseSets");
                });
#pragma warning restore 612, 618
        }
    }
}
